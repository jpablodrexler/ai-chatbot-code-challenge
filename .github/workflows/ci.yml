name: Build and Deploy AI Chatbot

on:
  push:
    branches:
      - main  # Cambia si tu rama principal tiene otro nombre
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Descarga el c칩digo fuente del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configura Python para ejecutar los tests unitarios
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. Instala las dependencias necesarias para los tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Ejecuta los tests unitarios con pytest
      - name: Run unit tests
        run: pytest chatbot/tests

      # 5. Genera una etiqueta para la imagen Docker usando la fecha y hora
      - name: Set up Docker tag with datetime
        id: vars
        run: echo "TAG=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      # 6. Configura Docker Buildx para construir im치genes multiplataforma
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 7. Inicia sesi칩n en DockerHub usando los secretos configurados
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 8. Construye y sube la imagen Docker a DockerHub
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: jpablodrexler/ai-chatbot:${{ env.TAG }}

      # 9. Inicia sesi칩n en Azure para el despliegue
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 10. Despliega la imagen Docker en Azure Web App
      - name: Deploy Docker container to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ai-chatbot-grupo66
          images: docker.io/jpablodrexler/ai-chatbot:${{ env.TAG }}
        env:
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_SEARCH_ADMIN_KEY: ${{ secrets.AZURE_SEARCH_ADMIN_KEY }}
